{"version":3,"sources":["components/ReservationTimelines.component.js","App.js","serviceWorker.js","index.js"],"names":["ReservationTimelinesComponent","props","state","items","this","setState","title","cardTitle","cardSubtitle","cardDetailedText","console","log","className","mode","cardHeight","Component","App","to","exact","path","component","ReservationTimelines","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gSAIqBA,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTC,MAAM,IAJK,E,kFASfC,KAAKC,SAAS,CACVF,MAAM,CACF,CACAG,MAAO,YACPC,UAAW,YACXC,aACI,6GACJC,iBAAkB,CAAC,+MAIf,+RAKJ,CACIH,MAAO,WACPC,UAAW,SACXC,aACI,2IAEJC,iBAAkB,CAAC,yJAEf,qJAGR,CACIH,MAAO,iBACPC,UAAW,SACXC,aACI,sGACJC,iBAAkB,CAAC,gPAKvB,CACIH,MAAO,iBACPC,UAAW,OACXC,aACI,+GAEJC,iBAAkB,CACd,6HAEA,kLAIR,CACIH,MAAO,iBACPC,UAAW,QACXC,aAAa,kFACbC,iBAAkB,CAAC,0HAEnB,gIAGJ,CACIH,MAAO,iBACPC,UAAW,OACXC,aACI,oEACJC,iBAAkB,CAAC,gMAEf,4NAMR,CACIH,MAAO,YACPC,UAAW,WACXC,aACI,mBACJC,iBAAkB,CAAC,6JAKvB,CACIH,MAAO,IACPE,aAAc,uB,+BAMpB,IACCL,EAASC,KAAKF,MAAdC,MAEP,OADAO,QAAQC,IAAI,OAAQR,GAEhB,yBAAKS,UAAU,UACX,kBAAC,IAAD,CACIT,MAAOA,EACPU,KAAK,WACLC,WAAY,U,GA5G2BC,aC8B5CC,E,iLAzBX,OACE,6BACE,yBAAKJ,UAAU,iDACb,kBAAC,IAAD,CAAMK,GAAI,IAAKL,UAAU,gBAAzB,UAGA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMK,GAAI,IAAKL,UAAU,YAAzB,UAON,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAM,CAAC,IAAK,IAAI,WAAYC,UAAWC,W,GAnB9CN,aCKEO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAMC,c","file":"static/js/main.dc0bdec9.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n// import Timeline from \"react-native-beautiful-timeline\";\nimport { Chrono } from \"react-chrono\";\n\nexport default class ReservationTimelinesComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items:[],\n        };\n    }\n\n    componentWillMount() {\n        this.setState({\n            items:[\n                {\n                title: \"July 2020\",\n                cardTitle: \"Beginning\",\n                cardSubtitle:\n                    \"I wonder whether the stars are set alight in heaven so that one day each one of us may find his own again.\",\n                cardDetailedText: [\"I like your voice when the first time I saw you. \" +\n                \"We had a dinner together and toke some walks besides the river. \" +\n                \"I was so glad that you send me a message after our first date. \" +\n                \"And then, our story begins. \",\n                    \"We had Korean food, watched movies, went to cat coffee and so on. \" +\n                    \"I still remember when we sit somewhere at Osaka station, you talked about your last relation. \" +\n                    \"At that moment, I do hope that beauty moment will last forever. \" +\n                    \"But luckily, we have spent almost one year from that time.\"],\n            },\n                {\n                    title: \"Aug 2020\",\n                    cardTitle: \"Dating\",\n                    cardSubtitle:\n                        \"If you tame me, then we shall need each other. \" +\n                        \"To me, you will be unique in all the world. To you, I shall be unique in all the world...\",\n                    cardDetailedText: [\"Our relation began after a hot pot? I remember the first time I kissed you at one Karaoke. \" +\n                    \"To me, it was the softest and sweetest thing in the world. \",\n                        \"The first day you stay at my home, the day we went to AbenoHarukas, \" +\n                        \"the day we went to escape game, so much fun that I felt when stay with you. \"],\n                },\n                {\n                    title: \"Spe & Oct 2020\",\n                    cardTitle: \"Travel\",\n                    cardSubtitle:\n                        \"What moves me so deeply, about this little prince who is sleeping here, is his loyalty to a flower.\",\n                    cardDetailedText: [\"We had a trip to Awaji island, I feel sorry that I got sick that time. \" +\n                    \"I slept early that night, and woke up finding you were in my side. \" +\n                    \"I cannot stop thinking kissing you that moment. \" +\n                    \"I like traveling with you no matter where it is. \"],\n                },\n                {\n                    title: \"Nov & Dec 2020\",\n                    cardTitle: \"Game\",\n                    cardSubtitle:\n                        \"If, for example, you come at four o'clock in the afternoon, \" +\n                        \"then at three o'clock I shall begin to be happy.\",\n                    cardDetailedText: [\n                        \"We had a one-day trip to see Japanese maple leaves. \" +\n                        \"I like the time in the car, as I feel only two of us are in the world.\",\n                        \"We spent a lot of time playing Switch games, and it never got tired. \" +\n                    \"We played side-by-side, and I could hug you for every moment.\" +\n                    \"I enjoy the moment with you even do noting.\"],\n                },\n                {\n                    title: \"Jan ~ Mar 2021\",\n                    cardTitle: \"Daily\",\n                    cardSubtitle:\"It is the time you have wasted for your rose that makes your rose so important.\",\n                    cardDetailedText: [\"We were been busy for our graduation of campus, \" +\n                    \"but I do appreciate that you came to my home and played games together.\",\n                    \"I know I have to move to Tokyo for my job, \" +\n                    \"but I want to spend every moment with you as possible as I could, and as always.\"],\n                },\n                {\n                    title: \"Apr ~ Jun 2021\",\n                    cardTitle: \"Work\",\n                    cardSubtitle:\n                        \"The stars are beautiful, because of a flower that cannot be seen.\",\n                    cardDetailedText: [\"So sorry that I have to go to Tokyo, but I'd like to come and find you every 2 weeks.\" +\n                    \"I wish I could come every week, but considering about the fee, hoping I will go back to Osaka next year.\",\n                        \"When you moved to your new home and felt lonely, \" +\n                        \"I don't know how to comfort you instead of staying with you.\" +\n                        \"I like the days in your room but I also wish you could pass these days alone. \" +\n                        \"Anyway, thanks to TV. ^(--)^\"\n                    ],\n                },\n                {\n                    title: \"July 2021\",\n                    cardTitle: \"Birthday\",\n                    cardSubtitle:\n                        \"Happy birthday! \",\n                    cardDetailedText: [\"We are going to have a cat together! \" +\n                    \"This means a lot for having the cat at the same day on your birthday. \" +\n                    \"Hoping she can attract you to come to Tokyo. \"\n                    ],\n                },\n                {\n                    title: \"~\",\n                    cardSubtitle: \"To be continue\",\n                }]\n        })\n    }\n\n\n    render() {\n        const {items} = this.state;\n        console.log(\"item\", items);\n        return (\n            <div className=\"col-12\">\n                <Chrono\n                    items={items}\n                    mode=\"VERTICAL\"\n                    cardHeight={10}\n                    // flipLayout={true}\n                    // useReadMore={false}\n                />\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport ReservationTimelines from \"./components/ReservationTimelines.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Yumika\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/\"} className=\"nav-link\">\n                TBD\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/\",\"/Yumika\"]} component={ReservationTimelines} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}